#!/bin/bash

DOWN=$(tail -n 1 /srv/http/log/speedtest.log | awk -F ',' '{print $1}')
UP=$(tail -n 1 /srv/http/log/speedtest.log | awk -F ',' '{print $2}')

good ()
        {

        echo "Speeds are good. D: $DOWN U: $UP Mb/s | AVG Down: $AVGDOWN AVG Up: $AVGUP"

        }

bad ()
        {

        echo "Speeds are bad. D: $DOWN U: $UP Mb/s | AVG Down: $AVGDOWN AVG Up: $AVGUP"

        }

warning ()
        {

        echo "Speeds are not s'good. D: $DOWN U: $UP Mb/s | AVG Down: $AVGDOWN AVG Up: $AVGUP"

        }

main ()
        {

        if [[ $DOWN -ge 150 ]]; then
                if [[ $UP -ge 10 ]]; then
                        good;
                fi
        else
                if [[ $DOWN -ge 75 ]]; then
                        if [[ $UP -ge 5 ]]; then
                                warning;
                        else
                                bad;
                        fi
                else
                        bad;
                fi
        fi

        }

average ()
        {

NUM=$(wc -l /srv/http/log/speedtest.log | awk -F '/srv/http/log/speedtest.log' '{print $1}')
COUNT="$(($NUM-1))"
TEST=2
BASE=0

while [ $TEST != $COUNT ]; do

        TEMP=$(head -n $TEST /srv/http/log/speedtest.log | tail -1 | awk -F ',' '{print $1}')
        BASE="$(($BASE+$TEMP))"
        TEST="$(($TEST+1))"
done


AVGDOWN=$(($BASE / $COUNT))

TEST=2
BASE=0

while [ $TEST != $COUNT ]; do

        TEMP=$(head -n $TEST /srv/http/log/speedtest.log | tail -1 | awk -F ',' '{print $2}')
        BASE="$(($BASE+$TEMP))"
        TEST="$(($TEST+1))"
done

AVGUP=$(($BASE / $COUNT))

        main;

        }

average;
